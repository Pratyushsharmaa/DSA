//using nested loops. TC = O(n^3). Not optimal solution.

#include<iostream>
using namespace std;
int commonElements(int arr1[], int size1,int arr2[], int size2, int arr3[], int size3);

int main(){
    int arr1[] = {1,2,3,4,5};
    int size1 = 5;
    int arr2[] = {2,4,6,7,8};
    int size2 = 5;
    int arr3[] = {9,8,10,2,4};
    int size3 = 5;
    int ans = commonElements(arr1,size1,arr2,size2,arr3,size3);
    cout<<ans<<endl;
}

int commonElements(int arr1[], int size1,int arr2[], int size2, int arr3[], int size3){
    bool found = false;
    for(int i=0; i<size1; i++){
        for(int j=0; j<size2; j++){
            for(int k=0; k<size3; k++){
                if(arr1[i] == arr2[j] && arr1[i] == arr3[k]){
                    cout<< arr1[i]<<" ";
                    found = true;
                    break;
                }
            }
        }
    }
    if(!found){
        cout<< -1;
    }
    
}
